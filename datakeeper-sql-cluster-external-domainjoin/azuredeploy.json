{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "licenseKeyFtpURL": {
      "type": "string",
      "metadata": {
        "description": "Enter the path to your temporary license file. This path appears in the email that you received from SIOS Technology Corp. when you requested an evaluation key. Provide the folder name which contains the license in this field.<br/>Example input - http://ftp.us.sios.com/pickup/EVAL_Some_User_2016-01-26_DKCE<br/><br/><br/>To request a free 14 day trial, visit http://us.sios.com/clustersyourway/cta/14-day-trial"
      }
    },
    "newStorageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "The prefix of the new storage account created to store the VMs disks, different storage accounts will be created for AD and DataKeeper VMs. This value must be composed of all lowercase letters or numbers and be a maximum of 20 characters long and globally unique within all of Azure."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Type of storage account to create. This must be set to Premium if DS size VMs are being created."
      }
    },
    "existingAvailabilitySet": {
      "type": "string",
      "defaultValue": "siosAvailabilitySet",
      "metadata": {
        "description": "The name of the existing availability set in which to place the nwe VM(s)."
      }
    },
	"virtualNetworkAddressRange": {
	  "type": "string",
      "defaultValue": "10.1.0.0/16",
      "metadata": {
        "description": "The IPv4 range to use for the new VNet. Should be in CIDR notation (ie. 10.1.0.0/16)."
      }
	},
	"staticSubnet": {
	  "type": "string",
      "defaultValue": "10.1.0.0/24",
      "metadata": {
        "description": "The IPv4 range to use for the new subnet. Should be in CIDR notation (ie. 10.1.0.0/16). Should also be contained within the VIRTUALNETWORKADDRESSRANGE."
      }
	},
    "privateIPAddressForNode0": {
      "type": "string",
      "defaultValue": "10.1.0.5",
      "metadata": {
        "description": "The starting private IP address to use for the new VM(s). Additional VMs will use the next IPs in sequence. For example if you provision 3 new VMs with 10.0.0.8 as the starting IP address, they will be given addresses 10.0.0.8, 10.0.0.9, and 10.0.0.10 respectively."
      }
    },
    "privateIPAddressForNode1": {
      "type": "string",
      "defaultValue": "10.1.0.6",
      "metadata": {
        "description": "The starting private IP address to use for the new VM(s). Additional VMs will use the next IPs in sequence. For example if you provision 3 new VMs with 10.0.0.8 as the starting IP address, they will be given addresses 10.0.0.8, 10.0.0.9, and 10.0.0.10 respectively."
      }
    },
	"dnsIPAddressForNewVNet": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The public IPv4 address used to contact the existing domain controller. Additional VMs will use the next IPs in sequence. For example if you provision 3 new VMs with 10.0.0.8 as the starting IP address, they will be given addresses 10.0.0.8, 10.0.0.9, and 10.0.0.10 respectively."
      }
    },
    "existingDomainName": {
      "type": "string",
      "defaultValue": "datakeeper.local",
      "metadata": {
        "description": "The domain name in FQDN form. This value should contain at least two parts, separated by a '.' (for example, datakeeper.local). The first part of the FQDN will be used as the login domain name (for example, login as datakeeper&#92;siosadmin), and must not match the DOMAINADMINUSERNAME. If DOMAINNAME does not contain a '.', the suffix '.local' will be appended."
      }
    },
    "existingDomainAdminUsername": {
      "type": "string",
      "defaultValue": "siosadmin",
      "metadata": {
        "description": "The username for the Administrator of the new VMs and Domain. The DOMAINADMINUSERNAME chosen must not match the domain specified in the DOMAINNAME parameter (for example: using DOMAINNAME 'datakeeper.local' and DOMAINADMINUSERNAME 'datakeeper' will cause the deployment to fail)."
      }
    },
    "existingDomainAdminPassword": {
      "type": "securestring",
      "defaultValue": "SIOS!5105",
      "metadata": {
        "description": "The password for the Administrator account of the new VMs and Domain"
      }
    },
    "vmNamePrefix": {
      "type": "string",
      "defaultValue": "sios-",
      "metadata": {
        "description": "Name prefix for all of the DataKeeper / SQL VMs."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS1",
      "allowedValues": [
        "Standard_D1",
        "Standard_DS1",
        "Standard_D2",
        "Standard_DS2",
        "Standard_D3",
        "Standard_DS3",
        "Standard_D4",
        "Standard_DS4",
        "Standard_D11",
        "Standard_DS11",
        "Standard_D12",
        "Standard_DS12",
        "Standard_D13",
        "Standard_DS13",
        "Standard_D14",
        "Standard_DS14",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4"
      ],
      "metadata": {
        "description": "The size of the primary domain controller VM. If a DS or GS size is selected, the ADSTORAGEACCOUNTTYPE parameter must have a Premium type selected."
      }
    },
    "clusterName": {
      "type": "string",
      "defaultValue": "sios-fc",
      "metadata": {
        "description": "Name of the cluster to join the vm(s) to."
      }
    },
    "clusterIPAddress": {
      "type": "string",
      "defaultValue": "10.1.0.200",
      "metadata": {
        "description": "IP address for the cluster being joined."
      }
    },
    "fileShareWitnessPath": {
      "type": "string",
      "defaultValue": "\\\\ad-pdc\\datakeeperhc1-fsw",
      "metadata": {
        "description": "File Share Witness being used for the cluster quorum"
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "availabilitySetID": "[resourceId('Microsoft.Compute/availabilitySets',parameters('existingAvailabilitySet'))]",
    "adminBase64Password": "[base64(parameters('existingDomainAdminPassword'))]",
    "baseUrl": "https://raw.githubusercontent.com/carrollh/siosDataKeeper-demo/master/datakeeper-sql-cluster-external-domainjoin",
    "subnetNames": {
      "staticSubnetName": "staticSubnet"
    },
    "ilbName": "InternalLoadBalancer",
    "ilbID": "[resourceId('Microsoft.Network/loadBalancers',variables('ilbName'))]",
    "ilbFE": "ilbFE",
    "ilbBE": "ilbBE",
    "ilbAOProbe": "ilbAlwaysOnEndPointProbe",
    "ilbFEConfigID": "[concat(variables('ilbID'),'/frontendIPConfigurations/',variables('ilbFE'))]",
    "ilbProbeID": "[concat(variables('ilbID'),'/probes/',variables('ilbAOProbe'))]",
    "ilbBEAddressPoolID": "[concat(variables('ilbID'),'/backendAddressPools/',variables('ilbBE'))]",
    "vmSettings": {
      "siosAvailabilitySetName": "siosAvailabilitySet",
      "vmContainerName": "vhds"
    },
	"virtualNetworkName": "[concat(parameters('newStorageAccountNamePrefix'), 'VNET')]",
    "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "staticSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').staticSubnetName)]",
    "subnets": [
      {
        "name": "[variables('subnetNames').staticSubnetName]",
        "properties": {
          "addressPrefix": "[parameters('staticSubnet')]"
        }
      }
    ],
    "configuration": {
      "creatingStorageAccounts": "[concat(variables('baseUrl'),'/Templates/creatingStorageAccounts.json')]",
      "rdpIPAdressSetupURL": "[concat(variables('baseUrl'),'/Templates/creatingPublicIP-RDP.json')]",
	  "availabilitySetSetupURL": "[concat(variables('baseUrl'),'/Templates/creatingAvailabilitySets.json')]",
	  "vnetSetupURL": "[concat(variables('baseUrl'),'/Templates/creatingNewVNet.json')]",
      "creatingInternalLoadBalancerURL": "[concat(variables('baseUrl'),'/Templates/creatingInternalLoadBalancer.json')]",
      "creatingNicsUrl": "[concat(variables('baseUrl'),'/Templates/creatingNICs.json')]",
      "vnetwithDNSTemplateURL": "[concat(variables('baseUrl'),'/Templates/creatingVNetWithDNSServer.json')]",
	  "creatingSiosVMsURL": "[concat(variables('baseUrl'),'/Templates/creatingSiosVMs.json')]",
      "prepareDataKeeperHeadNodeModuleURL": "[concat(variables('baseUrl'),'/DSC/ConfigureSiosVM0.ps1.zip')]",
      "prepareDataKeeperHeadNodeCommandStr": "ConfigureSiosVM0.ps1\\ConfigureSiosVM0",
      "prepareDataKeeperNodesModuleURL": "[concat(variables('baseUrl'),'/DSC/ConfigureSiosVM.ps1.zip')]",
      "prepareDataKeeperNodesCommandStr": "ConfigureSiosVM.ps1\\ConfigureSiosVM"
    }
  },
  "resources": [
    {
      "name": "CreatingStorageAccounts",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').creatingStorageAccounts]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "newStorageAccountNamePrefix": {
            "value": "[parameters('newStorageAccountNamePrefix')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          }
        }
      }
    },
    {
      "name": "SettingUpRdp",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').rdpIPAdressSetupURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "siosVMRdpIPAddressNamePrefix": {
            "value": "[parameters('vmNamePrefix')]"
          }
        }
      }
    },
	{
      "name": "CreatingAvailabilitySets",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').availabilitySetSetupURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "siosAvailabilitySetName": {
            "value": "[variables('vmSettings').siosAvailabilitySetName]"
          }
        }
      }
    },
	{
      "name": "CreatingVirtualNetwork",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').vnetSetupURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          }
        }
      }
    },
    {
      "name": "SettingUpLoadBalancers",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/SettingUpRdp"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').creatingInternalLoadBalancerURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "ilbName": {
            "value": "[variables('ilbName')]"
          },
          "ilbFE": {
            "value": "[variables('ilbFE')]"
          },
          "ilbIPAddress": {
            "value": "[parameters('clusterIPAddress')]"
          },
          "staticSubnetRef": {
            "value": "[variables('staticSubnetRef')]"
          },
          "ilbBE": {
            "value": "[variables('ilbBE')]"
          },
          "ilbBEAddressPoolID": {
            "value": "[variables('ilbBEAddressPoolID')]"
          },
          "ilbFEConfigID": {
            "value": "[variables('ilbFEConfigID')]"
          },
          "ilbProbeID": {
            "value": "[variables('ilbProbeID')]"
          },
          "ilbAOProbe": {
            "value": "[variables('ilbAOProbe')]"
          }
        }
      }
    },
    {
      "name": "CreatingNetworkInterfaces",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/SettingUpRdp",
        "Microsoft.Resources/deployments/SettingUpLoadBalancers"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').creatingNicsUrl]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "staticSubnetRef": {
            "value": "[variables('staticSubnetRef')]"
          },
          "siosVMName": {
            "value": "[parameters('vmNamePrefix')]"
          },
          "siosVMRdpIPAddressNamePrefix": {
            "value": "[parameters('vmNamePrefix')]"
          },
          "ilbBEAddressPoolID": {
            "value": "[variables('ilbBEAddressPoolID')]"
          }
        }
      }
    },
	{
      "name": "UpdatingDNStoPrimaryADVM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreatingVirtualNetwork"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').vnetwithDNSTemplateURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          },
          "DNSServerAddress": {
            "value": [
              "[parameters('dnsIPAddressForNewVNet')]"
            ]
          }
        }
      }
    },
    {
      "name": "CreatingSiosVirtualMachines",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
		"Microsoft.Resources/deployments/UpdatingDNStoPrimaryADVM"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuration').creatingSiosVMsURL]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmNamePrefix": {
            "value": "[parameters('vmNamePrefix')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "newStorageAccountNamePrefix": {
            "value": "[parameters('newStorageAccountNamePrefix')]"
          },
          "existingAvailabilitySet": {
            "value": "[variables('availabilitySetID')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "existingDomainName": {
            "value": "[parameters('existingDomainName')]"
          },
          "existingDomainAdminUsername": {
            "value": "[parameters('existingDomainAdminUsername')]"
          },
          "existingDomainAdminPassword": {
            "value": "[parameters('existingDomainAdminPassword')]"
          },
          "vmContainerName": {
            "value": "vhds"
          },
          "licenseKeyFtpURL": {
            "value": "[parameters('licenseKeyFtpURL')]"
          },
          "clusterName": {
            "value": "[parameters('clusterName')]"
          },
          "fileShareWitnessPath": {
            "value": "[parameters('fileShareWitnessPath')]"
          },
          "prepareDataKeeperHeadNodeModuleURL": {
            "value": "[variables('configuration').prepareDataKeeperHeadNodeModuleURL]"
          },
          "prepareDataKeeperHeadNodeCommandStr": {
            "value": "[variables('configuration').prepareDataKeeperHeadNodeCommandStr]"
          },
          "prepareDataKeeperNodesModuleURL": {
            "value": "[variables('configuration').prepareDataKeeperNodesModuleURL]"
          },
          "prepareDataKeeperNodesCommandStr": {
            "value": "[variables('configuration').prepareDataKeeperNodesCommandStr]"
          }
        }
      }
    }
  ]
}