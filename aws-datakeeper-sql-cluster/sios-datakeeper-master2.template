{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "This template deploys two Windows Server Failover Clustering (WSFC) nodes with SQL Server 2014 Evaluation and DataKeeper replication software. This template also deploys the required AD architecture outlined in \"Implementing Active Directory Domain Services in the AWS Cloud\" **WARNING** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template.",
	"Metadata": {
		"AWS::CloudFormation::Interface": {
			"ParameterGroups": [{
				"Label": {
					"default": "Network Configuration"
				},
				"Parameters": [
					"AvailabilityZones",
					"VPCCIDR",
					"PrivateSubnet1CIDR",
					"PrivateSubnet1Mask",
					"PrivateSubnet2CIDR",
					"PrivateSubnet2Mask",
					"PublicSubnet1CIDR",
					"PublicSubnet2CIDR",
					"RDGWCIDR"
				]
			}, {
				"Label": {
					"default": "Amazon EC2 Configuration"
				},
				"Parameters": [
					"KeyPairName",
					"NATInstanceType",
					"ADServer1InstanceType",
					"ADServer1NetBIOSName",
					"ADServer1PrivateIP",
					"ADServer2InstanceType",
					"ADServer2NetBIOSName",
					"ADServer2PrivateIP",
					"RDGW1InstanceType",
					"RDGW1NetBIOSName",
					"RDGW1PrivateIP",
					"RDGW2InstanceType",
					"RDGW2NetBIOSName",
					"RDGW2PrivateIP",
					"WSFCNode1InstanceType",
					"WSFCNode1NetBIOSName",
					"WSFCNode1PrivateIp",
					"WSFCNode1ClusterIp",
					"WSFCNode1SQLServerIp",
					"WSFCNode2InstanceType",
					"WSFCNode2NetBIOSName",
					"WSFCNode2PrivateIp",
					"WSFCNode2ClusterIp",
					"WSFCNode2SQLServerIp"
				]
			}, {
				"Label": {
					"default": "Microsoft Active Directory Configuration"
				},
				"Parameters": [
					"DomainDNSName",
					"DomainNetBIOSName",
					"RestoreModePassword",
					"DomainAdminUser",
					"DomainAdminPassword"
				]
			}, {
				"Label": {
					"default": "Replication Node Configuration"
				},
				"Parameters": [
					"LicenseKeyFtpURL",
					"SQLServiceAccount",
					"SQLServiceAccountPassword"
				]
			}, {
				"Label": {
					"default": "AWS Quick Start Configuration"
				},
				"Parameters": [
					"QSS3BucketName",
					"QSS3KeyPrefix"
				]
			}],
			"ParameterLabels": {
				"ADServer1InstanceType": {
					"default": "Domain Controller 1 Instance Type"
				},
				"ADServer1NetBIOSName": {
					"default": "Domain Controller 1 NetBIOS Name"
				},
				"ADServer1PrivateIP": {
					"default": "Domain Controller 1 Private IP Address"
				},
				"ADServer2InstanceType": {
					"default": "Domain Controller 2 Instance Type"
				},
				"ADServer2NetBIOSName": {
					"default": "Domain Controller 2 NetBIOS Name"
				},
				"ADServer2PrivateIP": {
					"default": "Domain Controller 2 Private IP Address"
				},
				"AvailabilityZones": {
					"default": "Availability Zones"
				},
				"DomainAdminPassword": {
					"default": "Domain Admin Password"
				},
				"DomainAdminUser": {
					"default": "Domain Admin User Name"
				},
				"DomainDNSName": {
					"default": "Domain DNS Name"
				},
				"DomainNetBIOSName": {
					"default": "Domain NetBIOS Name"
				},
				"KeyPairName": {
					"default": "Key Pair Name"
				},
				"NATInstanceType": {
					"default": "NAT Instance Type"
				},
				"PrivateSubnet1CIDR": {
					"default": "Private Subnet 1 CIDR"
				},
				"PrivateSubnet1Mask": {
					"default": "Subnet mask for Private Subnet located in AZ1"
				},
				"PrivateSubnet2CIDR": {
					"default": "Private Subnet 2 CIDR"
				},
				"PrivateSubnet2Mask": {
					"default": "Subnet mask for Private Subnet located in AZ2"
				},
				"PublicSubnet1CIDR": {
					"default": "Public Subnet 1 CIDR"
				},
				"PublicSubnet2CIDR": {
					"default": "Public Subnet 2 CIDR"
				},
				"QSS3BucketName": {
					"default": "Quick Start S3 Bucket Name"
				},
				"QSS3KeyPrefix": {
					"default": "Quick Start S3 Key Prefix"
				},
				"RDGW1InstanceType": {
					"default": "Remote Desktop Gateway 1 Instance Type"
				},
				"RDGW1NetBIOSName": {
					"default": "Remote Desktop Gateway 1 NetBIOS Name"
				},
				"RDGW1PrivateIP": {
					"default": "Remote Desktop Gateway 1 Private IP Address"
				},
				"RDGW2InstanceType": {
					"default": "Remote Desktop Gateway 2 Instance Type"
				},
				"RDGW2NetBIOSName": {
					"default": "Remote Desktop Gateway 2 NetBIOS Name"
				},
				"RDGW2PrivateIP": {
					"default": "Remote Desktop Gateway 2 Private IP Address"
				},
				"RDGWCIDR": {
					"default": "Allowed Remote Desktop Gateway External Access CIDR"
				},
				"RestoreModePassword": {
					"default": "Restore Mode Password"
				},
				"VPCCIDR": {
					"default": "VPC CIDR"
				}
			}
		}
	},
	"Parameters": {
		"LicenseKeyFtpURL": {
			"Description": "URL used to obtain license key for SIOS DataKeeper software.",
			"Type": "String"
		},
		"ADServer1InstanceType": {
			"AllowedValues": [
				"t2.large",
				"m3.large",
				"m3.xlarge",
				"m3.2xlarge",
				"m4.large",
				"m4.xlarge",
				"m4.2xlarge",
				"m4.4xlarge"
			],
			"Default": "m4.xlarge",
			"Description": "Amazon EC2 instance type for the first Active Directory instance",
			"Type": "String"
		},
		"ADServer1NetBIOSName": {
			"AllowedPattern": "[a-zA-Z0-9]+",
			"Default": "DC1",
			"Description": "NetBIOS name of the first Active Directory server (up to 15 characters)",
			"MaxLength": "15",
			"MinLength": "1",
			"Type": "String"
		},
		"ADServer1PrivateIP": {
			"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
			"Default": "10.0.0.10",
			"Description": "Fixed private IP for the first Active Directory server located in Availability Zone 1",
			"Type": "String"
		},
		"ADServer2InstanceType": {
			"AllowedValues": [
				"t2.large",
				"m3.large",
				"m3.xlarge",
				"m3.2xlarge",
				"m4.large",
				"m4.xlarge",
				"m4.2xlarge",
				"m4.4xlarge"
			],
			"Default": "m4.xlarge",
			"Description": "Amazon EC2 instance type for the second Active Directory instance",
			"Type": "String"
		},
		"ADServer2NetBIOSName": {
			"AllowedPattern": "[a-zA-Z0-9]+",
			"Default": "DC2",
			"Description": "NetBIOS name of the second Active Directory server (up to 15 characters)",
			"MaxLength": "15",
			"MinLength": "1",
			"Type": "String"
		},
		"ADServer2PrivateIP": {
			"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
			"Default": "10.0.32.10",
			"Description": "Fixed private IP for the second Active Directory server located in Availability Zone 2",
			"Type": "String"
		},
		"AvailabilityZones": {
			"Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved and only 2 AZs are used for this deployment.",
			"Type": "List<AWS::EC2::AvailabilityZone::Name>"
		},
		"DomainAdminPassword": {
			"AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
			"Description": "Password for the domain admin user. Must be at least 8 characters containing letters, numbers and symbols",
			"MaxLength": "32",
			"MinLength": "8",
			"NoEcho": "true",
			"Type": "String"
		},
		"DomainAdminUser": {
			"AllowedPattern": "[a-zA-Z0-9]*",
			"Default": "StackAdmin",
			"Description": "User name for the account that will be added as Domain Administrator. This is separate from the default \"Administrator\" account",
			"MaxLength": "25",
			"MinLength": "5",
			"Type": "String"
		},
		"DomainDNSName": {
			"AllowedPattern": "[a-zA-Z0-9]+\\..+",
			"Default": "example.com",
			"Description": "Fully qualified domain name (FQDN) of the forest root domain e.g. example.com",
			"MaxLength": "25",
			"MinLength": "3",
			"Type": "String"
		},
		"DomainNetBIOSName": {
			"AllowedPattern": "[a-zA-Z0-9]+",
			"Default": "example",
			"Description": "NetBIOS name of the domain (up to 15 characters) for users of earlier versions of Windows e.g. EXAMPLE",
			"MaxLength": "15",
			"MinLength": "1",
			"Type": "String"
		},
		"KeyPairName": {
			"Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
			"Type": "AWS::EC2::KeyPair::KeyName"
		},
		"NATInstanceType": {
			"AllowedValues": [
				"t2.nano",
				"t2.micro",
				"t2.small",
				"t2.medium",
				"t2.large",
				"m3.medium",
				"m3.large",
				"m4.large"
			],
			"Default": "t2.small",
			"Description": "Amazon EC2 instance type for the NAT Instances. This is only used if the region does not support NAT gateways.",
			"Type": "String"
		},
		"PrivateSubnet1CIDR": {
			"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
			"ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
			"Default": "10.0.0.0/19",
			"Description": "CIDR block for private subnet 1 located in Availability Zone 1.",
			"Type": "String"
		},
		"PrivateSubnet1Mask": {
			"Description": "Subnet mask for Private Subnet located in AZ1",
			"Type": "String",
			"Default": "255.255.224.0",
			"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
		},
		"PrivateSubnet2CIDR": {
			"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
			"ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
			"Default": "10.0.32.0/19",
			"Description": "CIDR block for private subnet 2 located in Availability Zone 2.",
			"Type": "String"
		},
		"PublicSubnet1CIDR": {
			"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
			"ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
			"Default": "10.0.128.0/20",
			"Description": "CIDR Block for the public DMZ subnet 1 located in Availability Zone 1",
			"Type": "String"
		},
		"PublicSubnet2CIDR": {
			"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
			"ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
			"Default": "10.0.144.0/20",
			"Description": "CIDR Block for the public DMZ subnet 2 located in Availability Zone 2",
			"Type": "String"
		},
		"PrivateSubnet2Mask": {
			"Description": "Subnet mask for Private Subnet located in AZ2",
			"Type": "String",
			"Default": "255.255.224.0",
			"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
		},
		"QSS3BucketName": {
			"AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
			"ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
			"Default": "quickstart-reference",
			"Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
			"Type": "String"
		},
		"QSS3KeyPrefix": {
			"AllowedPattern": "^[0-9a-zA-Z-]+(/[0-9a-zA-Z-]+)*$",
			"ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
			"Default": "microsoft/activedirectory/latest",
			"Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
			"Type": "String"
		},
		"RDGW1InstanceType": {
			"Description": "Amazon EC2 instance type for the first Remote Desktop Gateway instance",
			"Type": "String",
			"Default": "t2.large",
			"AllowedValues": [
				"t2.large",
				"m3.large",
				"m3.xlarge",
				"m3.2xlarge",
				"m4.large",
				"m4.xlarge",
				"m4.2xlarge",
				"m4.4xlarge"
			]
		},
		"RDGW1NetBIOSName": {
			"Description": "NetBIOS name of the first Remote Desktop Gateway (up to 15 characters)",
			"Type": "String",
			"Default": "RDGW1",
			"MinLength": "1",
			"MaxLength": "15",
			"AllowedPattern": "[a-zA-Z0-9]+"
		},
		"RDGW1PrivateIP": {
			"Description": "Fixed private IP for the first Remote Desktop Gateway located in Availability Zone 1",
			"Type": "String",
			"Default": "10.0.128.11"
		},
		"RDGW2InstanceType": {
			"Description": "Amazon EC2 instance type for the second Remote Desktop Gateway instance",
			"Type": "String",
			"Default": "t2.large",
			"AllowedValues": [
				"t2.large",
				"m3.large",
				"m3.xlarge",
				"m3.2xlarge",
				"m4.large",
				"m4.xlarge",
				"m4.2xlarge",
				"m4.4xlarge"
			]
		},
		"RDGW2NetBIOSName": {
			"Description": "NetBIOS name of the second Remote Desktop Gateway (up to 15 characters)",
			"Type": "String",
			"Default": "RDGW2",
			"MinLength": "1",
			"MaxLength": "15",
			"AllowedPattern": "[a-zA-Z0-9]+"
		},
		"RDGW2PrivateIP": {
			"Description": "Fixed private IP for the second Remote Desktop Gateway located in Availability Zone 2",
			"Type": "String",
			"Default": "10.0.144.11"
		},
		"RDGWCIDR": {
			"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
			"ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
			"Description": "Allowed CIDR Block for external access to the Remote Desktop Gateways",
			"Type": "String"
		},
		"RestoreModePassword": {
			"AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
			"Description": "Password for a separate Administrator account when the domain controller is in Restore Mode. Must be at least 8 characters containing letters, numbers and symbols",
			"MaxLength": "32",
			"MinLength": "8",
			"NoEcho": "True",
			"Type": "String"
		},
		"VPCCIDR": {
			"AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
			"ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
			"Default": "10.0.0.0/16",
			"Description": "CIDR Block for the VPC",
			"Type": "String"
		},
		"SQLServiceAccount": {
			"Description": "User name for the SQL Server Service Account. This Account is a Domain User.",
			"Type": "String",
			"Default": "sqlsa",
			"MinLength": "5",
			"MaxLength": "25",
			"AllowedPattern": "[a-zA-Z0-9]*"
		},
		"SQLServiceAccountPassword": {
			"Description": "Password for the SQL Service account. Must be at least 8 characters containing letters, numbers and symbols",
			"Type": "String",
			"Default": "SIOS!5105",
			"MinLength": "8",
			"MaxLength": "32",
			"AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
			"NoEcho": "true"
		},
		"WSFCNode1InstanceType": {
			"Description": "Amazon EC2 instance type for the 1st WSFC Node",
			"Type": "String",
			"Default": "m3.xlarge",
			"AllowedValues": [
				"m3.xlarge",
				"m3.2xlarge",
				"c3.xlarge",
				"c3.2xlarge",
				"c3.4xlarge",
				"g2.2xlarge",
				"r3.xlarge",
				"r3.2xlarge",
				"r3.4xlarge",
				"x1.16xlarge",
				"x1.32xlarge",
				"d2.xlarge",
				"d2.2xlarge",
				"d2.4xlarge",
				"d2.8xlarge",
				"i2.xlarge",
				"i2.2xlarge",
				"i2.4xlarge"
			],
			"ConstraintDescription": "Only EBS Optimized instance types r3.xlarge, r3.2xlarge, r3.4xlarge allowed"
		},
		"WSFCNode2InstanceType": {
			"Description": "Amazon EC2 instance type for the 1st WSFC Node",
			"Type": "String",
			"Default": "m3.xlarge",
			"AllowedValues": [
				"m3.xlarge",
				"m3.2xlarge",
				"c3.xlarge",
				"c3.2xlarge",
				"c3.4xlarge",
				"g2.2xlarge",
				"r3.xlarge",
				"r3.2xlarge",
				"r3.4xlarge",
				"x1.16xlarge",
				"x1.32xlarge",
				"d2.xlarge",
				"d2.2xlarge",
				"d2.4xlarge",
				"d2.8xlarge",
				"i2.xlarge",
				"i2.2xlarge",
				"i2.4xlarge"
			],
			"ConstraintDescription": "Only EBS Optimized instance types r3.xlarge, r3.2xlarge, r3.4xlarge allowed"
		},
		"WSFCNode1NetBIOSName": {
			"Description": "NetBIOS name of the 1st WSFC Node (up to 15 characters)",
			"Type": "String",
			"Default": "WSFCNode1",
			"MinLength": "1",
			"MaxLength": "15",
			"AllowedPattern": "[a-zA-Z0-9]+"
		},
		"WSFCNode2NetBIOSName": {
			"Description": "NetBIOS name of the 2nd WSFC Node (up to 15 characters)",
			"Type": "String",
			"Default": "WSFCNode2",
			"MinLength": "1",
			"MaxLength": "15",
			"AllowedPattern": "[a-zA-Z0-9]+"
		},
		"WSFCNode1PrivateIp": {
			"Description": "Primary private IP for the 1st WSFC Node located in AZ1",
			"Type": "String",
			"Default": "10.0.0.100"
		},
		"WSFCNode1ClusterIp": {
			"Description": "Secondary private IP for WSFC cluster on 1st WSFC Node",
			"Type": "String",
			"Default": "10.0.0.101"
		},
		"WSFCNode1SQLServerIp": {
			"Description": "Third private IP for Availability Group Listner on 1st WSFC Node",
			"Type": "String",
			"Default": "10.0.0.200"
		},
		"WSFCNode2PrivateIp": {
			"Description": "Primary private IP for the 2nd WSFC Node located in AZ2",
			"Type": "String",
			"Default": "10.0.32.100"
		},
		"WSFCNode2ClusterIp": {
			"Description": "Secondary private IP for WSFC cluster on 2nd WSFC Node",
			"Type": "String",
			"Default": "10.0.32.101"
		},
		"WSFCNode2SQLServerIp": {
			"Description": "Third private IP for Availability Group Listner on 2nd WSFC Node",
			"Type": "String",
			"Default": "10.0.32.200"
		}
	},
	"Mappings": {
		"AWSInfoRegionMap": {
			"ap-northeast-1": {
				"Partition": "aws",
				"QuickStartS3URL": "https://s3.amazonaws.com"
			},
			"ap-northeast-2": {
				"Partition": "aws",
				"QuickStartS3URL": "https://s3.amazonaws.com"
			},
			"ap-south-1": {
				"Partition": "aws",
				"QuickStartS3URL": "https://s3.amazonaws.com"
			},
			"ap-southeast-1": {
				"Partition": "aws",
				"QuickStartS3URL": "https://s3.amazonaws.com"
			},
			"ap-southeast-2": {
				"Partition": "aws",
				"QuickStartS3URL": "https://s3.amazonaws.com"
			},
			"ca-central-1": {
				"Partition": "aws",
				"QuickStartS3URL": "https://s3.amazonaws.com"
			},
			"eu-central-1": {
				"Partition": "aws",
				"QuickStartS3URL": "https://s3.amazonaws.com"
			},
			"eu-west-1": {
				"Partition": "aws",
				"QuickStartS3URL": "https://s3.amazonaws.com"
			},
			"eu-west-2": {
				"Partition": "aws",
				"QuickStartS3URL": "https://s3.amazonaws.com"
			},
			"sa-east-1": {
				"Partition": "aws",
				"QuickStartS3URL": "https://s3.amazonaws.com"
			},
			"us-east-1": {
				"Partition": "aws",
				"QuickStartS3URL": "https://s3.amazonaws.com"
			},
			"us-east-2": {
				"Partition": "aws",
				"QuickStartS3URL": "https://s3.amazonaws.com"
			},
			"us-gov-west-1": {
				"Partition": "aws-us-gov",
				"QuickStartS3URL": "https://s3-us-gov-west-1.amazonaws.com"
			},
			"us-west-1": {
				"Partition": "aws",
				"QuickStartS3URL": "https://s3.amazonaws.com"
			},
			"us-west-2": {
				"Partition": "aws",
				"QuickStartS3URL": "https://s3.amazonaws.com"
			}
		}
	},
	"Resources": {
		"VPCStack": {
			"Type": "AWS::CloudFormation::Stack",
			"Properties": {
				"TemplateURL": {
					"Fn::Join": [
						"/", [{
								"Fn::FindInMap": [
									"AWSInfoRegionMap", {
										"Ref": "AWS::Region"
									},
									"QuickStartS3URL"
								]
							}, {
								"Ref": "QSS3BucketName"
							}, {
								"Ref": "QSS3KeyPrefix"
							},
							"submodules/quickstart-aws-vpc",
							"templates/aws-vpc.template"
						]
					]
				},
				"Parameters": {
					"AvailabilityZones": {
						"Fn::Join": [
							",", {
								"Ref": "AvailabilityZones"
							}
						]
					},
					"KeyPairName": {
						"Ref": "KeyPairName"
					},
					"NATInstanceType": {
						"Ref": "NATInstanceType"
					},
					"NumberOfAZs": "2",
					"PrivateSubnet1ACIDR": {
						"Ref": "PrivateSubnet1CIDR"
					},
					"PrivateSubnet2ACIDR": {
						"Ref": "PrivateSubnet2CIDR"
					},
					"PublicSubnet1CIDR": {
						"Ref": "PublicSubnet1CIDR"
					},
					"PublicSubnet2CIDR": {
						"Ref": "PublicSubnet2CIDR"
					},
					"VPCCIDR": {
						"Ref": "VPCCIDR"
					}
				}
			}
		},
		"ADStack": {
			"DependsOn": "VPCStack",
			"Type": "AWS::CloudFormation::Stack",
			"Properties": {
				"TemplateURL": {
					"Fn::Join": [
						"/", [{
								"Fn::FindInMap": [
									"AWSInfoRegionMap", {
										"Ref": "AWS::Region"
									},
									"QuickStartS3URL"
								]
							}, {
								"Ref": "QSS3BucketName"
							}, {
								"Ref": "QSS3KeyPrefix"
							},
							"templates/ad-2012r2-1.template"
						]
					]
				},
				"Parameters": {
					"ADServer1InstanceType": {
						"Ref": "ADServer1InstanceType"
					},
					"ADServer1NetBIOSName": {
						"Ref": "ADServer1NetBIOSName"
					},
					"ADServer1PrivateIP": {
						"Ref": "ADServer1PrivateIP"
					},
					"ADServer2InstanceType": {
						"Ref": "ADServer2InstanceType"
					},
					"ADServer2NetBIOSName": {
						"Ref": "ADServer2NetBIOSName"
					},
					"ADServer2PrivateIP": {
						"Ref": "ADServer2PrivateIP"
					},
					"DomainAdminPassword": {
						"Ref": "DomainAdminPassword"
					},
					"DomainAdminUser": {
						"Ref": "DomainAdminUser"
					},
					"DomainDNSName": {
						"Ref": "DomainDNSName"
					},
					"DomainNetBIOSName": {
						"Ref": "DomainNetBIOSName"
					},
					"KeyPairName": {
						"Ref": "KeyPairName"
					},
					"PrivateSubnet1CIDR": {
						"Ref": "PrivateSubnet1CIDR"
					},
					"PrivateSubnet1ID": {
						"Fn::GetAtt": [
							"VPCStack",
							"Outputs.PrivateSubnet1AID"
						]
					},
					"PrivateSubnet2CIDR": {
						"Ref": "PrivateSubnet2CIDR"
					},
					"PrivateSubnet2ID": {
						"Fn::GetAtt": [
							"VPCStack",
							"Outputs.PrivateSubnet2AID"
						]
					},
					"PublicSubnet1CIDR": {
						"Ref": "PublicSubnet1CIDR"
					},
					"PublicSubnet2CIDR": {
						"Ref": "PublicSubnet2CIDR"
					},
					"QSS3BucketName": {
						"Ref": "QSS3BucketName"
					},
					"QSS3KeyPrefix": {
						"Ref": "QSS3KeyPrefix"
					},
					"RestoreModePassword": {
						"Ref": "RestoreModePassword"
					},
					"VPCCIDR": {
						"Ref": "VPCCIDR"
					},
					"VPCID": {
						"Fn::GetAtt": [
							"VPCStack",
							"Outputs.VPCID"
						]
					}
				}
			}
		},
		"RDGWStack": {
			"DependsOn": "ADStack",
			"Type": "AWS::CloudFormation::Stack",
			"Properties": {
				"TemplateURL": {
					"Fn::Join": [
						"/", [{
								"Fn::FindInMap": [
									"AWSInfoRegionMap", {
										"Ref": "AWS::Region"
									},
									"QuickStartS3URL"
								]
							}, {
								"Ref": "QSS3BucketName"
							}, {
								"Ref": "QSS3KeyPrefix"
							},
							"submodules/quickstart-microsoft-rdgateway",
							"templates/rdgw-domain.template"
						]
					]
				},
				"Parameters": {
					"ADServer1PrivateIP": {
						"Ref": "ADServer1PrivateIP"
					},
					"ADServer2PrivateIP": {
						"Ref": "ADServer2PrivateIP"
					},
					"DomainAdminPassword": {
						"Ref": "DomainAdminPassword"
					},
					"DomainAdminUser": {
						"Ref": "DomainAdminUser"
					},
					"DomainDNSName": {
						"Ref": "DomainDNSName"
					},
					"DomainMemberSGID": {
						"Fn::GetAtt": [
							"ADStack",
							"Outputs.DomainMemberSGID"
						]
					},
					"DomainNetBIOSName": {
						"Ref": "DomainNetBIOSName"
					},
					"KeyPairName": {
						"Ref": "KeyPairName"
					},
					"PublicSubnet1ID": {
						"Fn::GetAtt": [
							"VPCStack",
							"Outputs.PublicSubnet1ID"
						]
					},
					"PublicSubnet2ID": {
						"Fn::GetAtt": [
							"VPCStack",
							"Outputs.PublicSubnet2ID"
						]
					},
					"QSS3BucketName": {
						"Ref": "QSS3BucketName"
					},
					"QSS3KeyPrefix": {
						"Fn::Join": [
							"/", [{
									"Ref": "QSS3KeyPrefix"
								},
								"submodules/quickstart-microsoft-rdgateway"
							]
						]
					},
					"RDGW1InstanceType": {
						"Ref": "RDGW1InstanceType"
					},
					"RDGW1NetBIOSName": {
						"Ref": "RDGW1NetBIOSName"
					},
					"RDGW1PrivateIP": {
						"Ref": "RDGW1PrivateIP"
					},
					"RDGW2InstanceType": {
						"Ref": "RDGW2InstanceType"
					},
					"RDGW2NetBIOSName": {
						"Ref": "RDGW2NetBIOSName"
					},
					"RDGW2PrivateIP": {
						"Ref": "RDGW2PrivateIP"
					},
					"RDGWCIDR": {
						"Ref": "RDGWCIDR"
					},
					"VPCID": {
						"Fn::GetAtt": [
							"VPCStack",
							"Outputs.VPCID"
						]
					}
				}
			}
		},
		"SIOSStack": {
			"Type": "AWS::CloudFormation::Stack",
			"DependsOn": "ADStack",
			"Properties": {
				"TemplateURL": "https://s3.amazonaws.com/sios-datakeeper/CloudFormation/Templates/sios-datakeeper.template",
				"Parameters": {
					"AD1PrivateIp": {
						"Ref": "ADServer1PrivateIP"
					},
					"AD2PrivateIp": {
						"Ref": "ADServer2PrivateIP"
					},
					"AD1NetBIOSName": {
						"Ref": "ADServer1NetBIOSName"
					},
					"AD2NetBIOSName": {
						"Ref": "ADServer2NetBIOSName"
					},
					"DomainAdminPassword": {
						"Ref": "DomainAdminPassword"
					},
					"DomainAdminUser": {
						"Ref": "DomainAdminUser"
					},
					"FullyQualifiedDomainName": {
						"Ref": "DomainDNSName"
					},
					"DomainMemberSGID": {
						"Fn::GetAtt": [
							"ADStack",
							"Outputs.DomainMemberSGID"
						]
					},
					"DomainNetBIOSName": {
						"Ref": "DomainNetBIOSName"
					},
					"KeyPairName": {
						"Ref": "KeyPairName"
					},
					"SQLServiceAccount": {
						"Ref": "SQLServiceAccount"
					},
					"SQLServiceAccountPassword": {
						"Ref": "SQLServiceAccountPassword"
					},
					"VPCID": {
						"Fn::GetAtt": [
							"VPCStack",
							"Outputs.VPCID"
						]
					},
					"PrivateSubnet1ACIDR": {
						"Ref": "PrivateSubnet1CIDR"
					},
					"PrivateSubnet1AMask": {
						"Ref": "PrivateSubnet1Mask"
					},
					"WSFCNode1InstanceType": {
						"Ref": "WSFCNode1InstanceType"
					},
					"WSFCNode1NetBIOSName": {
						"Ref": "WSFCNode1NetBIOSName"
					},
					"WSFCNode1PrivateIp": {
						"Ref": "WSFCNode1PrivateIp"
					},
					"WSFCNode1ClusterIp": {
						"Ref": "WSFCNode1ClusterIp"
					},
					"WSFCNode1SQLServerIp": {
						"Ref": "WSFCNode1SQLServerIp"
					},
					"PrivateSubnet1AId": {
						"Fn::GetAtt": [
							"VPCStack",
							"Outputs.PrivateSubnet1AID"
						]
					},
					"PrivateSubnet2ACIDR": {
						"Ref": "PrivateSubnet2CIDR"
					},
					"PrivateSubnet2AMask": {
						"Ref": "PrivateSubnet2Mask"
					},
					"WSFCNode2InstanceType": {
						"Ref": "WSFCNode2InstanceType"
					},
					"WSFCNode2NetBIOSName": {
						"Ref": "WSFCNode2NetBIOSName"
					},
					"WSFCNode2PrivateIp": {
						"Ref": "WSFCNode2PrivateIp"
					},
					"WSFCNode2ClusterIp": {
						"Ref": "WSFCNode2ClusterIp"
					},
					"WSFCNode2SQLServerIp": {
						"Ref": "WSFCNode2SQLServerIp"
					},
					"PrivateSubnet2AId": {
						"Fn::GetAtt": [
							"VPCStack",
							"Outputs.PrivateSubnet2AID"
						]
					},
					"VPCCIDR": {
						"Fn::GetAtt": [
							"VPCStack",
							"Outputs.VPCCIDR"
						]
					},
					"LicenseKeyFtpURL": {
						"Ref": "LicenseKeyFtpURL"
					}
				}
			}
		}
	}
}