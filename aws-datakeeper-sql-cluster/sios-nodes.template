{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Mappings": {
		"RegionMap": {
			"us-east-1": {
				"64": "ami-21414f36"
			}
		}
	},
	"Parameters": {
		"InstanceType": {
			"AllowedValues": [
				"m3.medium",
				"m3.large",
				"m3.xlarge",
				"m3.2xlarge",
				"m4.large",
				"c3.large",
				"c3.xlarge",
				"c3.2xlarge",
				"c3.4xlarge",
				"c3.8xlarge",
				"r3.large",
				"r3.xlarge",
				"r3.2xlarge",
				"r3.4xlarge",
				"r3.8xlarge",
				"x1.16xlarge",
				"x1.32xlarge",
				"d2.large",
				"d2.xlarge",
				"d2.2xlarge",
				"d2.4xlarge",
				"d2.8xlarge",
				"i2.large",
				"i2.xlarge",
				"i2.2xlarge",
				"i2.4xlarge",
				"i2.8xlarge"
			],
			"Default": "m3.medium",
			"Description": "Amazon EC2 instance type for this SQL / replication node Instance.",
			"Type": "String"
		},
		"SecurityGroupId": {
			"Type": "AWS::EC2::SecurityGroup::Id"
		},
		"SubnetId": {
			"Type": "AWS::EC2::Subnet::Id"
		},
		"DomainName": {
			"AllowedPattern": "[a-zA-Z0-9]+\\..+",
			"Default": "example.com",
			"Description": "Fully qualified domain name (FQDN) of the forest root domain e.g. example.com",
			"MaxLength": "25",
			"MinLength": "3",
			"Type": "String"
		},
		"DomainAdminUsername": {
			"AllowedPattern": "[a-zA-Z0-9]*",
			"Default": "StackAdmin",
			"Description": "User name for the account that will be added as Domain Administrator. This is separate from the default \"Administrator\" account",
			"MaxLength": "25",
			"MinLength": "5",
			"Type": "String"
		},
		"DomainAdminPassword": {
			"AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
			"Description": "Password for the Administrator user account. Must be at least 8 characters containing letters, numbers and symbols",
			"MaxLength": "32",
			"MinLength": "8",
			"NoEcho": "true",
			"Type": "String"
		},
		"VMNamePrefix": {
			"AllowedPattern": "[a-zA-Z0-9]+",
			"Default": "SIOS",
			"Description": "NetBIOS name prefix for both SQL / replication nodes (up to 13 characters)",
			"MaxLength": "13",
			"MinLength": "1",
			"Type": "String"
		},
		"LicenseKeyFtpURL": {
			"Type": "String"
		}
	},
	"Resources": {
		"SIOS0": {
			"Type": "AWS::EC2::Instance",
			"Metadata": {
				"AWS::CloudFormation::Init": {
					"configSets": {
						"config": [
							"setup",
							"config",
							"bootstrapDSC"
						]
					},
					"setup": {
						"sources": {
							"C:\\Program Files\\WindowsPowerShell\\Modules\\cDisk": "http://s3.amazonaws.com/sios-datakeeper/CloudFormation/DSC/cDisk.zip",
							"C:\\Program Files\\WindowsPowerShell\\Modules\\xActiveDirectory": "http://s3.amazonaws.com/sios-datakeeper/CloudFormation/DSC/xActiveDirectory.zip",
							"C:\\Program Files\\WindowsPowerShell\\Modules\\xComputerManagement": "http://s3.amazonaws.com/sios-datakeeper/CloudFormation/DSC/xComputerManagement.zip",
							"C:\\Program Files\\WindowsPowerShell\\Modules\\xDataKeeper": "http://s3.amazonaws.com/sios-datakeeper/CloudFormation/DSC/xDataKeeper.zip",
							"C:\\Program Files\\WindowsPowerShell\\Modules\\xFailoverCluster": "http://s3.amazonaws.com/sios-datakeeper/CloudFormation/DSC/xFailoverCluster.zip",
							"C:\\Program Files\\WindowsPowerShell\\Modules\\xDisk": "http://s3.amazonaws.com/sios-datakeeper/CloudFormation/DSC/xDisk.zip",
							"C:\\Program Files\\WindowsPowerShell\\Modules\\xNetworking": "http://s3.amazonaws.com/sios-datakeeper/CloudFormation/DSC/xNetworking.zip",
							"C:\\cfn\\scripts\\": "http://s3.amazonaws.com/sios-datakeeper/CloudFormation/DSC/scripts.zip",
							"C:\\Windows\\Temp\\": "http://s3.amazonaws.com/sios-datakeeper/Software/DK-Setup.zip",
							"C:\\SQL2014\\": "http://s3.amazonaws.com/sios-datakeeper/Software/SQL2014.zip"
						}
					},
					"config": {
						"commands": {
							"a-set-execution-policy": {
								"command": "powershell.exe -command Set-ExecutionPolicy Unrestricted -Force",
								"waitAfterCompletion": "0"
							},
							"b-reset-local-admin-password": {
								"command": {
									"Fn::Join": [
										"", [
											"powershell.exe -ExecutionPolicy Unrestricted -Command C:\\cfn\\scripts\\Reset-LocalAdminPassword.ps1 -password '", {
												"Ref": "DomainAdminPassword"
											},
											"'"
										]
									]
								},
								"waitAfterCompletion": "0"
							},
							"c-reset-builtin-admin-username": {
								"command": {
									"Fn::Join": [
										"", [
											"powershell.exe -ExecutionPolicy Unrestricted -Command C:\\cfn\\scripts\\Reset-BuiltInAdminUsername.ps1 -username '", {
												"Ref": "DomainAdminUsername"
											},
											"'"
										]
									]
								},
								"waitAfterCompletion": "0"
							},
							"d-rename-computer": {
								"command": {
									"Fn::Join": [
										"", [
											"powershell.exe Rename-Computer -NewName ", {
												"Ref": "VMNamePrefix"
											},
											"-0",
											" -Restart"
										]
									]
								},
								"waitAfterCompletion": "forever"
							}
						}
					},
					"bootstrapDSC": {
						"commands": {
							"a-create-cert": {
								"command": {
									"Fn::Join": [
										"", [
											"powershell.exe -ExecutionPolicy Unrestricted -command c:\\cfn\\scripts\\New-DSCCertificate.ps1 -Password '", {
												"Ref": "DomainAdminPassword"
											},
											"' -Instance ", {
												"Ref": "VMNamePrefix"
											},
											"-0"
										]
									]
								},
								"waitAfterCompletion": "0"
							},
							"b-run-dsc-config": {
								"command": {
									"Fn::Join": [
										"", [
											"powershell.exe -ExecutionPolicy Unrestricted -Command c:\\cfn\\scripts\\ConfigureSiosVM0.ps1",
											" -DomainName ", {
												"Ref": "DomainName"
											},
											" -AdminUsername ", {
												"Ref": "DomainAdminUsername"
											},
											" -AdminPassword ", {
												"Ref": "DomainAdminPassword"
											},
											" -LicenseKeyFtpURL ", {
												"Ref": "LicenseKeyFtpURL"
											},
											" -ClusterName ", {
												"Ref": "VMNamePrefix"
											}, "-fc",
											" -Nodes ", {
												"Ref": "VMNamePrefix"
											}, "-0,", {
												"Ref": "VMNamePrefix"
											}, "-1"
										]
									]
								},
								"waitAfterCompletion": "forever"
							}
						}
					}
				}
			},
			"Properties": {
				"ImageId": {
					"Fn::FindInMap": ["RegionMap", {
						"Ref": "AWS::Region"
					}, "64"]
				},
				"InstanceType": {
					"Ref": "InstanceType"
				},
				"NetworkInterfaces": [{
					"GroupSet": [{
						"Ref": "SecurityGroupId"
					}],
					"AssociatePublicIpAddress": "true",
					"DeviceIndex": "0",
					"DeleteOnTermination": "true",
					"PrivateIpAddress": "10.0.0.5",
					"SubnetId": {
						"Ref": "SubnetId"
					}
				}],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": ["", [
							"<script>\n",
							"cfn-init.exe -v ",
							" --configsets config ",
							" --stack ", {
								"Ref": "AWS::StackId"
							},
							" --resource SIOS0 ",
							" --region ", {
								"Ref": "AWS::Region"
							}, "\n",
							"</script>\n"
						]]
					}
				},
				"BlockDeviceMappings": [{
					"DeviceName": "/dev/sdc",
					"VirtualName": "ephemeral0"
				}, {
					"DeviceName": "/dev/sda1",
					"Ebs": {
						"VolumeSize": "100",
						"VolumeType": "gp2"
					}
				}]
			}
		}
	},
	"Outputs": {
		"SIOS0": {
			"Value": {
				"Ref": "SIOS0"
			}
		}
	}
}